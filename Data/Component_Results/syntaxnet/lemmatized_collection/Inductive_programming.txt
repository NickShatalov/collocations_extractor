inductive programming ip be a special area of automatic programming cover research from artificial intelligence and programming which address learning of typically declarative logic or functional and often recursive program from incomplete specification such a inputoutput example or constraint . depend on the programming language use there be several kind of inductive programming . inductive functional programming which use functional programming language such a lisp or haskell and most especially inductive logic programming which use logic programming language such a prolog and other logical representation such a description logics have be more prominent but other programming language paradigm have also been use such a constraint programming or probabilistic programming . inductive programming incorporates all approach which are concern with learn program or algorithm from incomplete formal specification . possible input in an ip system be a set of training input and correspond output or an output evaluation function describe the desired behavior of the intend program trace or action sequence which describe the process of calculate specific output constraint for the program to be induce concern it time efficiency or it complexity various kind of background knowledge such a standard data type predefined function to be use program scheme or template describe the data flow of the intended program heuristic for guide the search for a solution or other bias . output of an ip system be a program in some arbitrary programming language contain conditionals and loop or recursive control structure or any other kind of turingcomplete representation language . in many application the output program must be correct with respect to the example and partial specification and this lead to the consideration of inductive programming a a special area inside automatic programming or program synthesis usually oppose to deductive program synthesis where the specification be usually complete . in other case inductive programming is see a a more general area where any declarative programming or representation language can be use and we may even have some degree of error in the example a in general machine learn the more specific area of structure mine or the area of symbolic artificial intelligence . a distinctive feature be the number of example or partial specification need . typically inductive programming technique can learn from just a few example . the diversity of inductive programming usually come from the application and the language that are use apart from logic programming and functional programming other programming paradigm and representation language have been use or suggest in inductive programming such a functional logic programming constraint programming probabilistic programming abductive logic programming modal logic action language agent language and many type of imperative language . research on the inductive synthesis of recursive functional program start in the early s and wa bring onto firm theoretical foundation with the seminal thesis system of summer and work of biermann . these approach were split into two phase first inputoutput example are transform into nonrecursive program trace use a small set of basic operator second regularity in the trace are search for and used to fold them into a recursive program . the main result until the mid s are survey by smith . due to limited progress with respect to the range of program that could be synthesize research activity decrease significantly in the next decade . the advent of logic programming bring a new elan but also a new direction in the early s especially due to the mi system of shapiro eventually spawn the new field of inductive logic programming ilp . the early work of plotkin and his relative least general generalization rlgg have an enormous impact in inductive logic programming . most of ilp work address a wider class of problem a the focus be not only on recursive logic program but on machine learn of symbolic hypothesis from logical representation . however there be some encourage result on learn recursive prolog program such a quicksort from example together with suitable background knowledge for example with golem . but again after initial success the community got disappoint by limit progress about the induction of recursive program with ilp le and less focus on recursive program and lean more and more towards a machine learning set with application in relational data mining and knowledge discovery . in parallel to work in ilp koza propose genetic programming in the early s a a generateandtest base approach to learn program . the idea of genetic programming be far developed into the inductive programming system adate and the systematicsearchbased system magichaskeller . here again functional program are learn from set of positive example together with an output evaluation fitness function which specify the desire inputoutput behavior of the program to be learn . the early work in grammar induction also know a grammatical inference is relate to inductive programming a rewriting system or logic program can be use to represent production rule . in fact early work in inductive inference consider grammar induction and lisp program inference a basically the same problem . the result in term of learnability were relate to classical concept such a identificationinthelimit a introduce in the seminal work of gold . more recently the language learn problem wa address by the inductive programming community . in the recent year the classical approach have been resume and advance with great success . therefore the synthesis problem ha been reformulate on the background of constructorbased term rewriting system take into account modern technique of functional programming as well a moderate use of searchbased strategy and usage of background knowledge as well a automatic invention of subprogram . many new and successful application have recently appear beyond program synthesis most especially in the area of data manipulation programming by example and cognitive modelling see below . other idea have also been explore with the common characteristic of use declarative language for the representation of hypothesis . for instance the use of higherorder feature scheme or structured distance have be advocate for a good handling of recursive data type and structure abstraction ha also been explore a a more powerful approach to cumulative learning and function invention . one powerful paradigm that ha be recently use for the representation of hypothesis in inductive programming generally in the form of generative model be probabilistic programming and relate paradigm such a stochastic logic program and bayesian logic programming . the first workshop on approach and application of inductive programming aaip held in conjunction with icml identify all application where learn of program or recursive rule are call for . first in the domain of software engineer where structural learn software assistant and software agent can help to relieve programmer from routine task give programming support for end user or support of novice programmer and program tutor system . further area of application be language learn learn recursive control rule for aiplanning learn recursive concept in webmining or for dataformat transformation . since then these and many other area have show to be successful application niche for inductive programming such a enduser program the related area of programming by example and programming by demonstration and intelligent tutor system . other area where inductive inference ha be recently apply be knowledge acquisition artificial general intelligence reinforcement learn and theory evaluation and cognitive science in general . there may also be prospective application in intelligent agent game robotics personalisation ambient intelligence and human interface .