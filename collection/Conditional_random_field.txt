Conditional random fields (CRFs) are a class of statistical modeling method often applied in pattern recognition and machine learning and used for structured prediction. CRFs fall into the sequence modeling family. Whereas a discrete classifier predicts a label for a single sample without considering "neighboring" samples, a CRF can take context into account; e.g., the linear chain CRF (which is popular in natural language processing) predicts sequences of labels for sequences of input samples.

CRFs are a type of discriminative undirected probabilistic graphical model. It is used to encode known relationships between observations and construct consistent interpretations. It is often used for labeling or parsing of sequential data, such as natural language processing or biological sequences
and in computer vision.
Specifically, CRFs find applications in POS Tagging, shallow parsing,
named entity recognition,
gene finding and peptide critical functional region finding,
among other tasks, being an alternative to the related hidden Markov models (HMMs). In computer vision, CRFs are often used for object recognition and image segmentation.

Lafferty, McCallum and Pereira define a CRF on observations formula_1 and random variables formula_2 as follows:

Let formula_3 be a graph such that
formula_4,
Then formula_7 is a conditional random field when the random variables formula_8, conditioned on formula_1, obey the Markov property with
respect to the graph: formula_10, where formula_11 means
that formula_12 and formula_13 are neighbors in formula_6.
What this means is that a CRF is an undirected graphical model whose nodes can be divided into exactly two disjoint sets formula_1 and formula_2, the observed and output variables, respectively; the conditional distribution formula_17 is then modeled.

For general graphs, the problem of exact inference in CRFs is intractable. The inference problem for a CRF is basically the same as for an MRF and the same arguments hold.
However, there exist special cases for which exact inference is feasible:


If exact inference is impossible, several algorithms can be used to obtain approximate solutions. These include:

Learning the parameters formula_18 is usually done by maximum likelihood learning for formula_19.
If all nodes have exponential family distributions and all nodes are observed during training, this optimization is convex. It can be solved for example using gradient descent algorithms, or Quasi-Newton methods such as the L-BFGS algorithm.
On the other hand, if some variables are unobserved, the inference problem has to be solved for these variables. Exact inference is intractable in general graphs, so approximations have to be used.

In sequence modeling, the graph of interest is usually a chain graph. An input sequence of observed variables formula_20 represents a sequence of observations and formula_21 represents a hidden (or unknown) state variable that needs to be inferred given the observations. 
The formula_22 are structured to form a chain, with an edge between each formula_23 and formula_22. As well as having a simple interpretation of the formula_22 as "labels" for each element in the input sequence, this layout admits efficient algorithms for:

The conditional dependency of each formula_22 on formula_20 is defined through a fixed set of "feature functions" of the form formula_33, which can informally be thought of as measurements on the input sequence that partially determine the likelihood of each possible value for formula_22. The model assigns each feature a numerical weight and combines them to determine the probability of a certain value for formula_22.

Linear-chain CRFs have many of the same applications as conceptually simpler hidden Markov models (HMMs), but relax certain assumptions about the input and output sequence distributions. An HMM can loosely be understood as a CRF with very specific feature functions that use constant probabilities to model state transitions and emissions. Conversely, a CRF can loosely be understood as a generalization of an HMM that makes the constant transition probabilities into arbitrary functions that vary across the positions in the sequence of hidden states, depending on the input sequence.

Notably in contrast to HMMs, CRFs can contain any number of feature functions, the feature functions can inspect the entire input sequence formula_20 at any point during inference, and the range of the feature functions need not have a probabilistic interpretation.

CRFs can be extended into higher order models by making each formula_22 dependent on a fixed number formula_38 of previous variables formula_39. In conventional formulations of higher order CRFs, training and inference are only practical for small values of formula_38 (such as "o" â‰¤ 5), since their computational cost increases exponentially with formula_38.

However, another recent advance has managed to ameliorate these issues by leveraging concepts and tools from the field of Bayesian nonparametrics. Specifically, the CRF-infinity approach 
constitutes a CRF-type model that is capable of learning infinitely-long temporal dynamics in a scalable fashion. This is effected by introducing a novel potential function for CRFs that is based on the Sequence Memoizer (SM), a nonparametric Bayesian model for learning infinitely-long dynamics in sequential observations. To render such a model computationally tractable, CRF-infinity employs a mean-field approximation 
of the postulated novel potential functions (which are driven by an SM). This allows for devising efficient approximate training and inference algorithms for the model, without undermining its capability to capture and model temporal dependencies of arbitrary length.

There exists another generalization of CRFs, the semi-Markov conditional random field (semi-CRF), which models variable-length "segmentations" of the label sequence formula_21. This provides much of the power of higher-order CRFs to model long-range dependencies of the formula_22, at a reasonable computational cost.

Finally, large-margin models for structured prediction, such as the structured Support Vector Machine can be seen as an alternative training procedure to CRFs.

Latent-dynamic conditional random fields (LDCRF) or discriminative probabilistic latent variable models (DPLVM) are a type of CRFs for sequence tagging tasks. They are latent variable models that are trained discriminatively.

In an LDCRF, like in any sequence tagging task, given a sequence of observations x = formula_44, the main problem the model must solve is how to assign a sequence of labels y = formula_45 from one finite set of labels . Instead of directly modeling (y|x) as an ordinary linear-chain CRF would do, a set of latent variables h is "inserted" between x and y using the chain rule of probability:

This allows capturing latent structure between the observations and labels. While LDCRFs can be trained using quasi-Newton methods, a specialized version of the perceptron algorithm called the latent-variable perceptron has been developed for them as well, based on Collins' structured perceptron algorithm. These models find applications in computer vision, specifically gesture recognition from video streams and shallow parsing.

This is a partial list of software that implement generic CRF tools.

This is a partial list of software that implement CRF related tools.


