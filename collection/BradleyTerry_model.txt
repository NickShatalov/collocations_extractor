The Bradley–Terry model is a probability model that can predict the outcome of a comparison. Given a pair of individuals and drawn from some population, it estimates the probability that the pairwise comparison turns out true, as

where is a positive real-valued score assigned to individual . The comparison can be read as " is preferred to ", " ranks higher than ", or " beats ", depending on the application.

For example, may represent the skill of a team in a sports tournament, estimated from the number of times has won a match. formula_2 then represents the probability that will win a match against . Another example used to explain the model's purpose is that of scoring products in a certain category by quality. While it's hard for a person to draft a direct ranking of (many) brands of wine, it may be feasible to compare a sample of pairs of wines and say, for each pair, which one is better. The Bradley–Terry model can then be used to derive a full ranking.

The model is named after R. A. Bradley and M. E. Terry, who presented it in 1952, although it had already been studied by Zermelo in the 1920s.

Real-world applications of the model include estimation of the influence of statistical journals, or ranking documents by relevance in machine-learned search engines.
In the latter application, formula_3 may reflect that document is more relevant to the user's query than document , so it should be displayed earlier in the results list. The individual then express the relevance of the document, and can be estimated from the frequency with which users click particular "hits" when presented with a result list.

The Bradley–Terry model can be parametrized in various ways. One way to do so is to pick a single parameter per observation, leading to a model of parameters .
Another variant, in fact the version considered by Bradley and Terry, uses exponential score functions formula_4 so that

or, using the logit (and disallowing ties),

reducing the model to logistic regression on pairs of individuals.

The following algorithm computes the parameters of the basic version of the model from a sample of observations. Formally, it computes a maximum likelihood estimate, i.e., it maximizes the likelihood of the observed data. The algorithm dates back to the work of Zermelo.

The observations required are the outcomes of previous comparisons, for example, pairs where beats . Summarizing these outcomes as , the number of times has beaten , we obtain the log-likelihood of the parameter vector as

Denote the number of comparisons "won" by as , and the number of comparisons made between and as . Starting from an arbitrary vector , the algorithm iteratively performs the update

for all . After computing all of the new parameters, they should be renormalized,

This estimation procedure improves the log-likelihood in every iteration, and eventually converges to a unique maximum.

